---
-
  become: true
  hosts: all
  become_method: sudo
  become_user: root
  tasks:
  - name: Disabled AutoUpdate
    copy:
      dest: "/etc/apt/apt.conf.d/20auto-upgrades"
      content: |
        APT::Periodic::Update-Package-Lists "0";
        APT::Periodic::Unattended-Upgrade "0";

  - name: update master01
    hostname:
      name: "{{ groups['masters'][0] }}"
    when: inventory_hostname == groups['masters'][0]
  
  - name: update master02
    hostname:
      name: "{{ groups['masters'][1] }}"
    when: inventory_hostname == groups['masters'][1]

  - name: update master03
    hostname:
      name: "{{ groups['masters'][2] }}"
    when: inventory_hostname == groups['masters'][2]
  
  - name: update worknode01
    hostname:
      name: "{{ groups['worknodes'][0] }}"
    when: inventory_hostname == groups['worknodes'][0]

  - name: update worknode02
    hostname:
      name: "{{ groups['worknodes'][1] }}"
    when: inventory_hostname == groups['worknodes'][1]

  - name: Reboot host and wait for it to restart
    reboot:
      msg: "Reboot initiated by Ansible"
      connect_timeout: 5
      reboot_timeout: 600
      pre_reboot_delay: 0
      post_reboot_delay: 30
      test_command: whoami


  - name: Reboot if necessary
    meta: flush_handlers
          
  #- name: Unconditionally reboot the machine with all defaults
  #  ansible.builtin.reboot:
  #- name: reboot
  #  shell: "sleep 3 &&  reboot"
